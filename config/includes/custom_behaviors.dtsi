#define MAKE_TD(NAME, TAP, DOUBLE_TAP) \
    ZMK_BEHAVIOR(NAME,\
        tap_dance, \
        tapping-term-ms = <190>; \
        bindings = <TAP>, <DOUBLE_TAP>; \
    )

MAKE_TD(tdl, &kp LEFT, &kp LA(LEFT))

ZMK_BEHAVIOR(tdr, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp RIGHT>, <&kp LA(RIGHT)>;
)

ZMK_BEHAVIOR(brackets, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp LBKT>, <&kp RBKT>;
)

ZMK_BEHAVIOR(braces, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp LBRC>, <&kp RBRC>;
)

ZMK_BEHAVIOR(parenthesis, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp LPAR>, <&kp RPAR>;
)

ZMK_BEHAVIOR(thans, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp LT>, <&kp GT>;
)

ZMK_HOLD_TAP(th,
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
    hold-while-undecided;
)

ZMK_HOLD_TAP(smart_num,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&num_dance>;
)

ZMK_TAP_DANCE(num_dance,
    tapping-term-ms = <200>;
    bindings = <&num_word NUM>, <&sl NUM>;
)

ZMK_HOLD_TAP(sla,
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&sl>;
)

ZMK_TAP_DANCE(esc_to_alt,
    tapping-term-ms = <200>;
    bindings = <&kp ESC>, <&to ALT>;
)

ZMK_TAP_DANCE(esc_to_def,
    tapping-term-ms = <200>;
    bindings = <&kp ESC>, <&to BASE>;
)