#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/totem.h"

#define BASE 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4

/*                   KEY POSITIONS
    ╭──────────────────────┬─────────────────────╮
    │  LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
 ╭──╯  LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 ╰───╮
 │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
 ╰──────────╮  LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
            ╰──────────────┴─────────────╯

*/

#include "home_row_mods.dtsi"

/* Custom behaviors */

ZMK_BEHAVIOR(tdl, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp LEFT>, <&kp LA(LEFT_ARROW)>;
)

ZMK_BEHAVIOR(tdr, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp RIGHT>, <&kp LA(RIGHT)>;
)

ZMK_BEHAVIOR(brackets, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
)

ZMK_BEHAVIOR(braces, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
)

ZMK_BEHAVIOR(parenthesis, tap_dance,
    tapping-term-ms = <175>;
    bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
)

ZMK_HOLD_TAP(th,
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
    hold-while-undecided;
)

// reuse basic mod-morph scheme
#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

// tap: comma | shift + tap: semicolon | ctrl + shift + tap: <
SIMPLE_MORPH(comma_morph, SFT, &kp COMMA, &comma_inner_morph)
SIMPLE_MORPH(comma_inner_morph, CTL, &kp SEMICOLON, &kp LESS_THAN)

// tap: dot | shift + tap: colon | ctrl + shift + tap: >
SIMPLE_MORPH(dot_morph, SFT, &kp DOT, &dot_inner_morph)
SIMPLE_MORPH(dot_inner_morph, CTL, &kp COLON, &kp GREATER_THAN)

// tap: qmark | shift + tap: excl
SIMPLE_MORPH(qmark, SFT, &kp QMARK, &kp EXCL)

#include "combos.dtsi"

// aliases
#define LHPR &kp LS(LA(LC(LGUI)))
#define RHPR &kp (RA(RC(RGUI)))
#define HPR_G &hml LS(LA(LC(LGUI))) G
#define HPR_H &hmr RS(RA(RC(RGUI))) H

/* Keymap */

ZMK_LAYER(base_layer,
     //               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                        &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
     //               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                        &hml LCTRL A  &hml LALT S   &hml LGUI D   &hml LSHIFT   F HPR_G           HPR_H         &hmr RSHIFT J &hmr RGUI K   &hmr RALT L  &hmr RCTRL SEMI
     // ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
          &kp GRAVE     &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &comma_morph  &dot_morph    &qmark        &kp SQT
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    &kp ESC      &lt 1 SPACE    &lt 3 TAB         &lt 2 BSPC    &lt 4 SPACE   &kp RALT
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(nav_layer,
     //               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                        &none         &none         &none         &none         &none             &none         &none         &none         &none         &none
     //               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                        &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHIFT    LHPR              &none         &tdl          &kp DOWN      &kp UP        &tdr
     // ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
          &none         &none         &none         &none         &none         &none             &none         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &none
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    &none         &none         &none             &none         &none         &none
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(num_layer,
     //               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                        &none         &kp N7        &kp N8        &kp N9        &none             &none         &none         &none         &none         &none
     //               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                        &none         &kp N4        &kp N5        &kp N6        &none             RHPR          &kp RSHIFT    &kp RGUI      &kp RALT      &kp RCTRL
     // ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
          &none         &none         &kp N1        &kp N2        &kp N3        &none             &none         &none         &none         &none         &none         &none
     // ╰─────────────┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    &kp N0        &none         &none             &none         &none         &none
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(sym_layer,
     //               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                        &none         &none         &none         &none         &none             &kp BSLH      &kp AMPS      &kp ASTRK     &parenthesis  &kp MINUS
     //               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                        &kp LEFT_ALT  &kp LEFT_ALT  &kp LGUI      &kp LSHIFT    LHPR              &braces       &kp DLLR      &kp PRCNT     &kp CARET     &kp PLUS
     // ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
          &none         &none         &none         &none         &none         &none             &brackets     &kp EXCL      &kp AT        &kp POUND     &none        &kp EQUAL
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    &none         &none         &none             &none         &none         &none
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(num_layer,
     //               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                        &kp F12       &kp F7        &kp F8        &kp F9        &none             &none         &none         &none         &none         &none
     //               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                        &kp F11       &kp F4        &kp F5        &kp F6        &none             RHPR          &kp RSHIFT    &kp RGUI      &kp RALT      &kp RCTRL
     // ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
          &none         &kp F10       &kp F1        &kp F2        &kp F3        &none             &none         &none         &none         &none         &none         &none
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    &kp N0        &none         &none              &none        &none         &none
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)